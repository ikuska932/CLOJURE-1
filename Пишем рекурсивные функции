(ns example)

 1. Функция удаления всех чётных чисел из списка
(defn remove-evens [lst]
  (filter odd? lst))

(println "Без чётных:" (remove-evens [1 2 3 4 5 6 7 8 9 10])) ;; => (1 3 5 7 9)

 2. Рекурсивная функция для подсчёта суммы всех чисел во вложенном списке
(defn deep-sum [lst]
  (cond
    (empty? lst) 0
    (sequential? (first lst)) (+ (deep-sum (first lst)) (deep-sum (rest lst)))
    :else (+ (first lst) (deep-sum (rest lst)))))

(println "Сумма вложенного списка:" (deep-sum [1 [2 3] [4 [5 6]]])) ;; => 21

 3. Хвостовая рекурсия для нахождения суммы элементов списка
(defn sum-tailrec [lst]
  (loop [lst lst acc 0]
    (if (empty? lst)
      acc
      (recur (rest lst) (+ acc (first lst))))))

(println "Сумма списка (хвостовая рекурсия):" (sum-tailrec [1 2 3 4 5])) ;; => 15
